rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function signedIn() {
      return request.auth != null;
    }

    function isResourceOwner() {
      return request.auth.uid in resource.data.get('owners', []);
    }

    function isWorkspaceOwner(workspaceid) {
      let workspace = get(/databases/$(database)/documents/workspaces/$(workspaceid)).data;
      return workspace != null && request.auth.uid in workspace.get('owners', []);
    }

    function isValidNewWorkspace() {
      return request.auth.uid in request.resource.data.get('owners', []);
    }

    match /profiles/{userid} {
      allow read, update, delete: if signedIn() && request.auth.uid == userid;
      allow create: if signedIn();
    }

    match /workspaces/{workspaceid} {
      allow read, update, delete: if signedIn() && isResourceOwner();
      allow create: if signedIn() && isValidNewWorkspace();
    }

    match /brushes/{workspaceid} {
      allow read, write: if signedIn() && isWorkspaceOwner(workspaceid);
    }

    match /stitches/{workspaceid} {
      allow read, write: if signedIn() && isWorkspaceOwner(workspaceid);
    }
  }
}
