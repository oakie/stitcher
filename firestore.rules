rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function signedIn() {
      return request.auth != null;
    }

    function isResourceOwner(r) {
      return request.auth.uid in r.data.get('owners', []);
    }

    function isValidNewWorkspace() {
      return request.auth.uid in request.resource.data.get('owners', []);
    }

    match /profiles/{userid} {
      allow read, write: if signedIn() && request.auth.uid == userid;
    }

    match /workspaces/{workspaceid} {
      allow create, update: if signedIn() && resource == null && isValidNewWorkspace();
      allow read, update, delete: if signedIn() && isResourceOwner(resource);
    }

    match /brushes/{workspaceid} {
      allow read, create, update: if signedIn() && isResourceOwner(getAfter(/databases/$(database)/documents/workspaces/$(workspaceid)));
      allow delete: if signedIn() && isResourceOwner(get(/databases/$(database)/documents/workspaces/$(workspaceid)))
    }

    match /stitches/{workspaceid} {
      allow read, create, update: if signedIn() && isResourceOwner(getAfter(/databases/$(database)/documents/workspaces/$(workspaceid)));
      allow delete: if signedIn() && isResourceOwner(get(/databases/$(database)/documents/workspaces/$(workspaceid)))
    }
  }
}
