name: Deploy

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      target:
        required: true
        type: string
    secrets:
      credentials:
        required: true

jobs:
  deploy:
    name: ${{ inputs.target }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.target }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
      APP_ENVIRONMENT: ${{ vars.APP_ENVIRONMENT }}
      FIREBASE_APIKEY: ${{ vars.FIREBASE_APIKEY }}
      FIREBASE_AUTHDOMAIN: ${{ vars.FIREBASE_AUTHDOMAIN }}
      FIREBASE_PROJECTID: ${{ vars.FIREBASE_PROJECTID }}
      FIREBASE_STORAGEBUCKET: ${{ vars.FIREBASE_STORAGEBUCKET }}
      FIREBASE_MESSAGINGSENDERID: ${{ vars.FIREBASE_MESSAGINGSENDERID }}
      FIREBASE_APPID: ${{ vars.FIREBASE_APPID }}
      FIREBASE_MEASUREMENTID: ${{ vars.FIREBASE_MEASUREMENTID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./out

      - name: Substitute variables
        uses: iamazeem/substitute-action@v1
        with:
          input-files:
            ./out/**/*.js

      - name: Print build contents
        shell: bash
        run: ls ./out

      - name: Setup Google Application Credentials
        shell: bash
        run: echo "${{ secrets.credentials }}" | base64 --decode > ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to ${{ inputs.target }}
        run: firebase use ${{ vars.FIREBASE_PROJECT }} && firebase deploy --only hosting,firestore

      - name: Remove Google Application Credentials
        if: success() || failure()
        run: rm ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
